<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zww.trade.repository.PointExchangeMapper" >

	<!-- 查询出积分兑换套餐列表 -->
	<select id="queryGoldPackageList"
		resultType="com.zww.trade.pojo.GoldPackagePojo">
		SELECT
			A.id AS id,
			A.package_no AS packageNo,
			A.actual_gold AS actualGold,
			A.pay_amt AS payAmt
		FROM
			gold_package  A
		WHERE
			A.effective = '1'
			AND A.package_no >= 10
		ORDER BY A.package_no
	</select>

	<!-- 更新用户积分值 -->
	<update id="updateUserPoint"
			parameterType="map">
		UPDATE
			user_base
		SET
			user_point = #{point}
		WHERE
			user_id = #{userId}
		  	AND effective = '1'
	</update>

	<!-- 查询用户当前金币数 -->
	<select id="queryUserGold"
			parameterType="java.lang.String"
			resultType="int">
		SELECT
			gold
		FROM
			user_base
		WHERE
			effective = '1'
			AND user_id = #{userId}
	</select>

	<!-- 更新用户金币、积分值 -->
	<update id="updateUserGoldAndPoint"
			parameterType="map">
		UPDATE
			user_base
		SET
			user_point = #{point},
			gold = #{gold}
		WHERE
			user_id = #{userId}
			AND effective = '1'
	</update>

	<!-- 增加兑换积分记录 -->
	<insert id="insertUserRechargeRecords"
			parameterType="com.zww.trade.pojo.UserRechargeRecordsPojo"
			useGeneratedKeys="true" keyProperty="id">
		INSERT
		INTO
			${tableName}
		(
			user_id,
			amt,
			number,
			out_number,
			kind,
			status,
			billExplain,
			effective
		)
		VALUES
		(
			#{userId},
			#{amt},
			#{number},
			'',
			#{kind},
			'1',
			#{billExplain},
			'1'
		)
	</insert>

	<!-- 根据用户ID获取积分兑换记录(一年内的) -->
	<select id="queryUserRechargeRecords"
			parameterType="map"
			resultType="com.zww.trade.vo.PointExchangeRecordsOutputVo">
		SELECT
			id AS id,
			user_id AS userId,
			amt,
			number,
			CONCAT('娃娃币X',billExplain) AS billExplain,
			kind,
			status,
			date_format(update_time, '%Y-%m-%d %H:%I:%S') AS updateTime,
			(
				CASE WHEN kind = 2 THEN '积分兑换'
				ELSE '' END
			) AS kindName,
			(
				CASE WHEN status = 1 THEN '支付成功'
					  WHEN status = 0 THEN '支付失败'
				ELSE '' END
			) AS statusName
		FROM
			${tableName}
		WHERE
			user_id = #{userId}
			<![CDATA[
				AND date_format(update_time, '%Y-%m-%d') >= date_format(date_add(now(), interval -1 year), '%Y-%m-%d')
			]]>
			AND effective = '1'
		ORDER BY update_time DESC
	</select>

</mapper>